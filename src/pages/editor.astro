---
import Layout from '../layouts/Layout.astro';
import { getAllPosts } from '../lib/posts';

const seoConfig = {
  title: "Editor de Posts - Ajedrez FAMAF",
  description: "Panel de edición de posts para el editor",
};

// Cargar posts desde Supabase
// Función para convertir fecha YYYY-MM-DD a formato español
function formatDateToSpanish(dateString: string): string {
  const date = new Date(dateString);
  const months = [
    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
  ];
  
  const day = date.getDate();
  const month = months[date.getMonth()];
  
  return `${day} de ${month}`;
}

const posts = await getAllPosts();
---

<Layout title={seoConfig.title} description={seoConfig.description}>
  <div class="min-h-screen bg-gray-50 flex flex-col">
    <!-- Header -->
    <header class="bg-gray-900 border-b border-gray-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
          <a href="/" class="flex items-center space-x-3">
            <img
              src="/ajedrezfamaf.jpg"
              alt="Ajedrez FAMAF"
              class="w-10 h-10 rounded-full"
            />
            <h1 class="text-xl font-bold text-white">Ajedrez FAMAF - Editor</h1>
          </a>
          <a
            href="/"
            class="text-gray-400 hover:text-white transition-colors"
          >
            Volver al sitio
          </a>
        </div>
      </div>
    </header>

    <main class="flex-1">
      <!-- Login Section -->
      <section class="py-16">
        <div class="max-w-md mx-auto px-4 sm:px-6 lg:px-8">
          <div class="bg-white shadow-lg rounded-lg p-8">
            <div class="text-center mb-8">
              <h2 class="text-2xl font-bold text-gray-900 mb-2">
                Acceso de Editor
              </h2>
              <p class="text-gray-600">
                Ingresa tu contraseña para editar posts
              </p>
            </div>

            <form id="editor-login-form" class="space-y-6">
              <div>
                <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
                  Contraseña de Editor
                </label>
                <input
                  type="password"
                  id="password"
                  name="password"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  placeholder="Ingresa tu contraseña de editor"
                />
              </div>

              <button
                type="submit"
                class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
              >
                Ingresar como Editor
              </button>
            </form>

            <div id="error-message" class="mt-4 text-red-600 text-sm hidden">
              Contraseña incorrecta. Intenta nuevamente.
            </div>
          </div>
        </div>
      </section>

      <!-- Editor Panel (Hidden by default) -->
      <section id="editor-panel" class="hidden">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          
          <!-- Navigation Tabs -->
          <div class="mb-8">
            <nav class="flex space-x-8">
              <button
                id="tab-posts"
                class="tab-button active py-2 px-1 border-b-2 border-blue-500 font-medium text-sm text-blue-600"
              >
                Posts
              </button>
              <button
                id="tab-history"
                class="tab-button py-2 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700"
              >
                Historial de Cambios
              </button>
            </nav>
          </div>

          <!-- Posts Tab -->
          <div id="content-posts" class="tab-content">
            <div class="flex justify-between items-center mb-6">
              <h3 class="text-2xl font-bold text-gray-900">
                Gestión de Posts
              </h3>
              <button
                id="create-post-btn"
                class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
              >
                Crear Nuevo Post
              </button>
            </div>

            <!-- Posts List -->
            <div class="bg-white shadow overflow-hidden sm:rounded-md">
              <div class="px-4 py-5 sm:p-6">
                <div class="space-y-4" id="posts-list">
                  {posts.map((post) => (
                    <div class="border border-gray-200 rounded-lg p-4" data-post-id={post.id}>
                      <div class="flex justify-between items-start">
                        <div class="flex-1">
                          <h4 class="text-lg font-semibold text-gray-900 mb-2">
                            {post.title}
                          </h4>
                         <p class="text-gray-600 text-sm mb-2">
                           Fecha: {formatDateToSpanish(post.date)}
                         </p>
                          <p class="text-gray-600 text-sm mb-2">
                            Slug: {post.slug}
                          </p>
                          <p class="text-gray-500 text-sm">
                            {post.content.substring(0, 100)}...
                          </p>
                        </div>
                        <div class="flex space-x-2 ml-4">
                          <button 
                            class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm edit-post-btn"
                            data-post-id={post.id}
                          >
                            Editar
                          </button>
                          <a 
                            href={`/${post.slug.replace(/^\d+\./, '')}`}
                            class="bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm inline-block"
                            target="_blank"
                          >
                            Ver
                          </a>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <!-- History Tab -->
          <div id="content-history" class="tab-content hidden">
            <div class="mb-6">
              <h3 class="text-2xl font-bold text-gray-900">
                Historial de Cambios
              </h3>
            </div>

            <!-- History List -->
            <div class="bg-white shadow overflow-hidden sm:rounded-md">
              <div class="px-4 py-5 sm:p-6">
                <div class="space-y-4">
                  <!-- Mock History Entry 1 -->
                  <div class="border-l-4 border-blue-500 pl-4">
                    <div class="flex justify-between items-start">
                      <div>
                        <h4 class="text-lg font-semibold text-gray-900">
                          Post "Torneo de Septiembre 2022" editado
                        </h4>
                        <p class="text-gray-600 text-sm">
                          Editor: admin • Fecha: 23 de septiembre, 2022 - 14:30
                        </p>
                        <p class="text-gray-500 text-sm mt-1">
                          Se actualizó la información de participantes y resultados
                        </p>
                      </div>
                      <button class="bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm">
                        Ver Cambios
                      </button>
                    </div>
                  </div>

                  <!-- Mock History Entry 2 -->
                  <div class="border-l-4 border-green-500 pl-4">
                    <div class="flex justify-between items-start">
                      <div>
                        <h4 class="text-lg font-semibold text-gray-900">
                          Nuevo post creado: "Torneo de Agosto 2022"
                        </h4>
                        <p class="text-gray-600 text-sm">
                          Editor: admin • Fecha: 22 de agosto, 2022 - 16:45
                        </p>
                        <p class="text-gray-500 text-sm mt-1">
                          Post creado con información del segundo torneo
                        </p>
                      </div>
                      <button class="bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm">
                        Ver Post
                      </button>
                    </div>
                  </div>

                  <!-- Mock History Entry 3 -->
                  <div class="border-l-4 border-yellow-500 pl-4">
                    <div class="flex justify-between items-start">
                      <div>
                        <h4 class="text-lg font-semibold text-gray-900">
                          Post "Vuelven las clases del taller" actualizado
                        </h4>
                        <p class="text-gray-600 text-sm">
                          Editor: editor • Fecha: 20 de agosto, 2022 - 10:15
                        </p>
                        <p class="text-gray-500 text-sm mt-1">
                          Se agregó información sobre horarios y ubicación
                        </p>
                      </div>
                      <button class="bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm">
                        Ver Cambios
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>

    <!-- Post Editor Modal -->
    <div id="post-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
          <div class="flex items-center justify-between p-6 border-b border-gray-200">
            <h3 class="text-xl font-semibold text-gray-900" id="modal-title">
              Crear Nuevo Post
            </h3>
            <button id="close-modal" class="text-gray-400 hover:text-gray-600">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <div class="p-6 overflow-y-auto max-h-[calc(90vh-140px)]">
            <form id="post-form" class="space-y-6">
              <input type="hidden" id="post-id" name="postId" />
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="post-title" class="block text-sm font-medium text-gray-700 mb-2">
                    Título del Post
                  </label>
                  <input
                    type="text"
                    id="post-title"
                    name="title"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    placeholder="Ingresa el título del post"
                  />
                </div>
                
                <div>
                  <label for="post-slug" class="block text-sm font-medium text-gray-700 mb-2">
                    Slug (URL)
                  </label>
                  <input
                    type="text"
                    id="post-slug"
                    name="slug"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    placeholder="torneo-septiembre-2022"
                  />
                </div>
              </div>

              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="post-date" class="block text-sm font-medium text-gray-700 mb-2">
                    Fecha
                  </label>
                  <input
                    type="date"
                    id="post-date"
                    name="date"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
                
                <div>
                  <label for="post-version" class="block text-sm font-medium text-gray-700 mb-2">
                    Versión
                  </label>
                  <input
                    type="text"
                    id="post-version"
                    name="version"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    placeholder="v1.0"
                  />
                </div>
              </div>

              <div>
                <label for="post-content" class="block text-sm font-medium text-gray-700 mb-2">
                  Contenido (Markdown)
                </label>
                <textarea
                  id="post-content"
                  name="content"
                  rows="15"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm"
                  placeholder="Escribe el contenido del post en Markdown..."
                ></textarea>
                <p class="text-sm text-gray-500 mt-2">
                  Puedes usar Markdown para formatear el contenido. Las imágenes se subirán automáticamente a Supabase Storage.
                </p>
              </div>

              <div>
                <label for="post-image" class="block text-sm font-medium text-gray-700 mb-2">
                  <span id="featured-image-label">Imagen de Portada</span>
                  <span id="featured-image-optional" class="text-gray-500">(requerida)</span>
                </label>
                <input
                  type="file"
                  id="post-image"
                  name="image"
                  accept="image/*"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
                <div id="featured-image-preview" class="mt-2 hidden">
                  <p class="text-xs text-gray-500 mb-1">Imagen actual:</p>
                  <img id="preview-img" class="w-32 h-20 object-cover rounded border" alt="Preview" />
                </div>
                <div id="featured-image-upload-preview" class="mt-2 hidden">
                  <p class="text-xs text-gray-500 mb-1">Nueva imagen seleccionada:</p>
                  <img id="upload-preview-img" class="w-32 h-20 object-cover rounded border" alt="Upload Preview" />
                </div>
                <p class="text-sm text-gray-500 mt-2">
                  <span id="featured-image-help">Selecciona una imagen para la portada del post</span>
                </p>
              </div>
            </form>
          </div>
          
          <div class="flex items-center justify-end space-x-3 p-6 border-t border-gray-200">
            <button
              type="button"
              id="cancel-modal"
              class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors"
            >
              Cancelar
            </button>
            <button
              type="button"
              id="save-post"
              class="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors"
            >
              Guardar Post
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer class="bg-gray-900 border-t border-gray-700 py-8 mt-auto">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center">
          <a
            class="inline-flex items-center text-gray-300 hover:text-white transition-all text-lg"
            href="https://gonza.gr"
            target="_blank"
            rel="noopener noreferrer"
          >
            💻 🧉 Desarrollado por Gonza
          </a>
          <span class="text-gray-300 text-lg">
            Córdoba, Argentina 🇦🇷
          </span>
        </div>
      </div>
    </footer>
  </div>
</Layout>

<script define:vars={{ 
  EDITOR_PASSWORD: process.env.CHESS_EDITOR_PASSWORD || 'editor123',
  SUPABASE_URL: process.env.SUPABASE_URL || 'https://placeholder.supabase.co'
}}>
  // Función para obtener URL de imagen desde Supabase Storage
  function getImageUrl(imagePath) {
    if (!imagePath) return '';
    
    // Si ya es una URL completa, devolverla tal como está
    if (imagePath.startsWith('http')) {
      return imagePath;
    }
    
    // Si es una ruta local, convertirla a URL de Supabase Storage
    const cleanPath = imagePath.startsWith('/') ? imagePath.slice(1) : imagePath;
    const bucketName = 'post-images';
    
    return `${SUPABASE_URL}/storage/v1/object/public/${bucketName}/${cleanPath}`;
  }

  // Editor authentication
  document.getElementById('editor-login-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const password = document.getElementById('password').value;
    const errorMessage = document.getElementById('error-message');
    const editorPanel = document.getElementById('editor-panel');
    
    if (password === EDITOR_PASSWORD) {
      editorPanel.classList.remove('hidden');
      this.closest('section').classList.add('hidden');
    } else {
      errorMessage.classList.remove('hidden');
      setTimeout(() => {
        errorMessage.classList.add('hidden');
      }, 3000);
    }
  });

  // Tab functionality
  const tabButtons = document.querySelectorAll('.tab-button');
  const tabContents = document.querySelectorAll('.tab-content');

  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Remove active class from all buttons
      tabButtons.forEach(btn => {
        btn.classList.remove('active', 'border-blue-500', 'text-blue-600');
        btn.classList.add('border-transparent', 'text-gray-500');
      });
      
      // Add active class to clicked button
      this.classList.add('active', 'border-blue-500', 'text-blue-600');
      this.classList.remove('border-transparent', 'text-gray-500');
      
      // Hide all tab contents
      tabContents.forEach(content => {
        content.classList.add('hidden');
      });
      
      // Show corresponding tab content
      const tabId = this.id.replace('tab-', 'content-');
      document.getElementById(tabId).classList.remove('hidden');
    });
  });

  // Modal functionality
  const modal = document.getElementById('post-modal');
  const modalTitle = document.getElementById('modal-title');
  const postForm = document.getElementById('post-form');
  const closeModal = document.getElementById('close-modal');
  const cancelModal = document.getElementById('cancel-modal');

  // Open modal for creating new post
  document.getElementById('create-post-btn').addEventListener('click', function() {
    modalTitle.textContent = 'Crear Nuevo Post';
    postForm.reset();
    document.getElementById('post-id').value = '';
    
    // Resetear imagen de portada
    const featuredImageInput = document.getElementById('post-image');
    const featuredImagePreview = document.getElementById('featured-image-preview');
    const uploadPreview = document.getElementById('featured-image-upload-preview');
    const featuredImageOptional = document.getElementById('featured-image-optional');
    const featuredImageHelp = document.getElementById('featured-image-help');
    
    featuredImageInput.value = '';
    featuredImageInput.dataset.currentImage = '';
    featuredImagePreview.classList.add('hidden');
    uploadPreview.classList.add('hidden');
    featuredImageOptional.textContent = '(requerida)';
    featuredImageHelp.textContent = 'Selecciona una imagen para la portada del post';
    
    modal.classList.remove('hidden');
  });

  // Open modal for editing existing post
  document.addEventListener('click', async function(e) {
    if (e.target.classList.contains('edit-post-btn')) {
      const postId = e.target.dataset.postId;
      const postElement = document.querySelector(`[data-post-id="${postId}"]`);
      
      modalTitle.textContent = 'Editar Post';
      document.getElementById('post-id').value = postId;
      
      try {
        // Fetch post data
        const response = await fetch(`/api/posts/${postId}`);
        if (response.ok) {
          const post = await response.json();
          
          // Fill form with existing data
          document.getElementById('post-id').value = post.id;
          document.getElementById('post-title').value = post.title;
          document.getElementById('post-slug').value = post.slug;
          
          // Convert date to YYYY-MM-DD format for date input with validation
          let dateValue = '';
          try {
            const dateObj = new Date(post.date);
            if (!isNaN(dateObj.getTime())) {
              dateValue = dateObj.toISOString().split('T')[0];
            } else {
              // If date is invalid, use the raw value if it's already in YYYY-MM-DD format
              if (typeof post.date === 'string' && /^\d{4}-\d{2}-\d{2}$/.test(post.date)) {
                dateValue = post.date;
              }
            }
          } catch (error) {
            console.warn('Invalid date format:', post.date);
            // Try to use raw value if it looks like YYYY-MM-DD
            if (typeof post.date === 'string' && /^\d{4}-\d{2}-\d{2}$/.test(post.date)) {
              dateValue = post.date;
            }
          }
          document.getElementById('post-date').value = dateValue;
          
          document.getElementById('post-version').value = post.version;
          document.getElementById('post-content').value = post.content;
          
          // Manejar imagen de portada
          const featuredImageInput = document.getElementById('post-image');
          const featuredImagePreview = document.getElementById('featured-image-preview');
          const previewImg = document.getElementById('preview-img');
          const featuredImageOptional = document.getElementById('featured-image-optional');
          const featuredImageHelp = document.getElementById('featured-image-help');
          
          // Limpiar input de archivo
          featuredImageInput.value = '';
          
          if (post.featured_image) {
            // Guardar la imagen actual en un data attribute para referencia
            featuredImageInput.dataset.currentImage = post.featured_image;
            previewImg.src = getImageUrl(post.featured_image);
            featuredImagePreview.classList.remove('hidden');
            featuredImageOptional.textContent = '(opcional)';
            featuredImageHelp.textContent = 'Actualizar imagen de portada (opcional)';
          } else {
            featuredImageInput.dataset.currentImage = '';
            featuredImagePreview.classList.add('hidden');
            featuredImageOptional.textContent = '(requerida)';
            featuredImageHelp.textContent = 'Selecciona una imagen para la portada del post';
          }
          
          modal.classList.remove('hidden');
        } else {
          throw new Error('Error al cargar el post');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al cargar el post. Intenta nuevamente.');
      }
    }
  });

  // Close modal
  [closeModal, cancelModal].forEach(btn => {
    btn.addEventListener('click', function() {
      modal.classList.add('hidden');
    });
  });

  // Close modal when clicking outside
  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      modal.classList.add('hidden');
    }
  });

  // Save post functionality
  document.getElementById('save-post').addEventListener('click', async function() {
    const formData = new FormData(postForm);
    const postId = document.getElementById('post-id').value;
    const isEditing = postId !== '';
    const imageFile = document.getElementById('post-image').files[0];

    // Si es un post nuevo, la imagen es obligatoria
    if (!isEditing && !imageFile) {
      alert('Por favor selecciona una imagen de portada para el post');
      return;
    }

    let featuredImagePath = '';

    // Si hay una imagen nueva, subirla primero
    if (imageFile) {
      try {
        const uploadFormData = new FormData();
        uploadFormData.append('image', imageFile);
        
        const uploadResponse = await fetch('/api/upload-image', {
          method: 'POST',
          body: uploadFormData
        });
        
        if (!uploadResponse.ok) {
          throw new Error('Error al subir la imagen');
        }
        
        const uploadResult = await uploadResponse.json();
        featuredImagePath = uploadResult.fileName;
        console.log('Imagen subida:', featuredImagePath);
      } catch (error) {
        console.error('Error subiendo imagen:', error);
        alert('Error al subir la imagen. Intenta nuevamente.');
        return;
      }
    }

    const postData = {
      title: formData.get('title'),
      slug: formData.get('slug'),
      date: formData.get('date'),
      version: formData.get('version'),
      content: formData.get('content'),
      featured_image: featuredImagePath || (isEditing ? document.getElementById('post-image').dataset.currentImage : '')
    };

    // Validar slug reservado en frontend
    const reservedSlugs = ['torneos', 'admin', 'editor', 'colega']
    if (reservedSlugs.includes(postData.slug.toLowerCase())) {
      alert('Error: Este slug está reservado para rutas del sistema. Por favor usa otro slug.');
      return;
    }

    try {
      // Show loading state
      this.textContent = 'Guardando...';
      this.disabled = true;

      // Create or update post
      const url = '/api/posts' + (isEditing ? `/${postId}` : '');
      const method = isEditing ? 'PUT' : 'POST';
      
      const response = await fetch(url, {
        method: method,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(postData)
      });

      if (response.ok) {
        // Success - reload the page to show updated posts
        window.location.reload();
      } else {
        throw new Error('Error al guardar el post');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error al guardar el post. Intenta nuevamente.');
    } finally {
      this.textContent = 'Guardar Post';
      this.disabled = false;
    }
  });

  // Preview de imagen cuando se selecciona un archivo
  document.getElementById('post-image').addEventListener('change', function(e) {
    const file = e.target.files[0];
    const uploadPreview = document.getElementById('featured-image-upload-preview');
    const uploadPreviewImg = document.getElementById('upload-preview-img');
    
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        uploadPreviewImg.src = e.target.result;
        uploadPreview.classList.remove('hidden');
      };
      reader.readAsDataURL(file);
    } else {
      uploadPreview.classList.add('hidden');
    }
  });
</script>

<style>
  .tab-button.active {
    @apply border-blue-500 text-blue-600;
  }
</style>
